<?php
/**
 * The contents of this file was generated using the WSDLs as provided by eBay.
 *
 * DO NOT EDIT THIS FILE!
 */

namespace DTS\eBaySDK\Analytics\Types;

/**
 *
 * @property \DTS\eBaySDK\Analytics\Enums\StandardsLevelEnum $level
 * @property string $lookbackEndDate
 * @property string $lookbackStartDate
 * @property string $metricKey
 * @property string $name
 * @property string $thresholdLowerBound
 * @property string $thresholdMetaData
 * @property string $thresholdUpperBound
 * @property \DTS\eBaySDK\Analytics\Enums\DataTypeEnum $type
 * @property string $value
 */
class Metric extends \DTS\eBaySDK\Types\BaseType
{
    /**
     * @var array Properties belonging to objects of this class.
     */
    private static $propertyTypes = [
        'level' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'level'
        ],
        'lookbackEndDate' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'lookbackEndDate'
        ],
        'lookbackStartDate' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'lookbackStartDate'
        ],
        'metricKey' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'metricKey'
        ],
        'name' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'name'
        ],
        'thresholdLowerBound' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'thresholdLowerBound'
        ],
        'thresholdMetaData' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'thresholdMetaData'
        ],
        'thresholdUpperBound' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'thresholdUpperBound'
        ],
        'type' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'type'
        ],
        'value' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'value'
        ]
    ];

    /**
     * @param array $values Optional properties and values to assign to the object.
     */
    public function __construct(array $values = [])
    {
        list($parentValues, $childValues) = self::getParentValues(self::$propertyTypes, $values);

        parent::__construct($parentValues);

        if (!array_key_exists(__CLASS__, self::$properties)) {
            self::$properties[__CLASS__] = array_merge(self::$properties[get_parent_class()], self::$propertyTypes);
        }

        $this->setValues(__CLASS__, $childValues);
    }
}
